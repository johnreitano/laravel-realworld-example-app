# PHP as Linux Web App on Azure
# Build, package and deploy your PHP project to Azure Linux Web App.
# Add steps that run tests and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php

# some elements copied from https://gist.github.com/zanechua/a67ed1de1fff20639edb121bdb0b6e4d
trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'f6bbda9d-8748-4ae0-8616-1d5595706e52'
  
  # Web app name
  webAppName: 'laravel-realworld-example-app'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  # environmentName: ''

  # Root folder under which your composer.json file is available.
  rootFolder: $(System.DefaultWorkingDirectory)

stages:
- stage: Build
  displayName: Build stage
  variables:
    phpVersion: '7.3'
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        sudo update-alternatives --set php /usr/bin/php$(phpVersion)
        sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
        sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
        sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
        sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
        php -version
      workingDirectory: $(rootFolder)
      displayName: 'Use PHP version $(phpVersion)'
    
    - script: |
        curl -sL https://deb.nodesource.com/setup_11.x | sudo -E bash -
        sudo apt-get install -y build-essential debconf-utils screen nodejs mysql-server google-chrome-stable
        sudo apt-get install -y unzip xvfb autogen autoconf libtool pkg-config nasm
        sudo mysql -uroot -proot -e "GRANT ALL PRIVILEGES ON *.* TO 'homestead'@'localhost' IDENTIFIED BY 'secret';FLUSH PRIVILEGES;"
        sudo mysql -u root -proot -e 'create database homestead;'
      workingDirectory: $(rootFolder)
      displayName: 'Installing System Dependencies'

    - script: |
        mysql --version
      displayName: 'MySQL Version'

    - script: |
        cp .env.example .env
      displayName: 'Environment Setup'

    - script: |
        sudo composer self-update
        composer install --no-interaction --prefer-dist --no-suggest
        composer --version
      workingDirectory: $(rootFolder)
      displayName: 'Installing composer package dependencies'

    - script: |
        php artisan key:generate
        php artisan migrate
      displayName: 'Running Migrations'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(rootFolder)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    
    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : '
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
